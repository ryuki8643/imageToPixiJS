/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 dolphin.glb
*/

import React, { useRef ,useState} from 'react'
import { useGLTF } from '@react-three/drei'
import {  useFrame} from  '@react-three/fiber';
import { Mesh } from 'three';

const MODEL_PATH = '/Blender/dolphin.glb'

export function Dolphin(props) {
  const groupRef = useRef();
  useFrame((state) => {
        groupRef.current.rotation.x = state.mouse.x * 11;
        groupRef.current.rotation.y = state.mouse.y * 11; 
  })
  const { nodes, materials } = useGLTF(MODEL_PATH)
  const [active, setActive] = useState(false);
  const [hover, setHover] = useState(false);
  return (
    <group
      {...props}
      dispose={null}
      ref={groupRef}
      scale={3}
      onClick={() => {
        setActive(!active);
      }}
      onPointerOver={() => {
        setHover(true);
      }}
      onPointerOut={() => {
        setHover(false);
      }}
    >
      <mesh
        geometry={nodes.tmp37gbq0itply_1.geometry}
        material={materials["Material.001"]}
      />
      <mesh
        geometry={nodes.tmp37gbq0itply_2.geometry}
        material={materials["Material.002"]}
      />
    </group>
  );
}

useGLTF.preload(MODEL_PATH)
